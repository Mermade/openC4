{
	"swagger": "2.0",
	"info": {
		"version": "1.0.0",
		"title": "Channel 4 API",
		"x-logo": {
			"url": "http://www.channel4.com/static/programmes/images/c4-atom-logo.gif",
			"backgroundColor": "#FFFFFF"
		},
		"x-apiClientRegistration": {
			"url": "http://developer.channel4.com/apps/register"
		},
		"description": "This is the place to come for all the technical details you need to power your applications with Channel 4's deep programmes data.",
		"termsOfService": "http://developer.channel4.com/page/read/API_Terms_of_Use",
		"contact": {
			"name": "Open C4 Project",
			"email": "developer@channel4.co.uk",
			"url": "http://developer.channel4.com/"
		},
		"license": {
			"name": "Channel 4 API license",
			"url": "http://developer.channel4.com/page/read/API_Terms_of_Use"
		}
	},
	"externalDocs": {
		"description": "Programmes API Guide",
		"url": "http://developer.channel4.com/docs/read/ProgrammesAPIGuide"
	},
	"host": "api.channel4.com",
	"basePath": "/pmlsd",
	"tags": [
		{
			"name": "discoveryresources",
			"description": "Channel 4 data feeds"
		},
		{
			"name": "metadataresources",
			"description": "Channel 4 metadata"
		}
	],
	"schemes": [
		"http",
		"https"
	],
	"consumes": [
		"application/xml"
	],
	"produces": [
		"application/xml"
	],
	"parameters": {
		"platform": {
			"name": "platform",
			"in": "query",
			"description": "The platform to use for the query. Alias 'client'.",
			"required": false,
			"type": "string",
			"enum": [
				"c4",
				"ps3",
				"yv",
				"ios",
				"fm",
				"p06",
				"ctv",
				"freesat",
				"android",
				"samsung"
			]
		}
	},
	"paths": {
		"/4od/episode-list/date/{yyyy}/{mm}/{dd}.atom": {
			"get": {
				"description": "Information of daily broadcast content available on 4oD, according to \n  broadcast date\n\n  http://api.channel4.com/pmlsd/4od/episode-list/date/[yyyy]/[mm]/[dd].atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/4od/episode-list/date/2010/11/28.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "4oD Browse by Date Feed",
				"tags": [
					"discoveryresources"
				],
				"operationId": "4oD_Browse_by_Date_Feed",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/4oD_Browse_by_Date_Feed",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "yyyy",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The date for which you wish to see programming information"
					},
					{
						"name": "mm",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The date for which you wish to see programming information"
					},
					{
						"name": "dd",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The date for which you wish to see programming information"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/4od/episode-list/popular.atom": {
			"get": {
				"description": "Information of the most popular content available on 4oD, according to user \n  data driven.\n\n  http://api.channel4.com/pmlsd/4od/episode-list/popular.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/4od/episode-list/popular.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "4oD Most Popular Episodes Feed",
				"tags": [
					"discoveryresources"
				],
				"operationId": "4oD_Most_Popular_Episodes_Feed",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/4oD_Most_Popular_Episodes_Feed",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/4od/recently-added/videos.atom": {
			"get": {
				"description": "A feed containing metadata about short-form content relating to 4oD Episodes \n  recently added to 4oD based on linear transmission. The entries for the \n  Clips Landing Feed contain references to each short-form asset. It will \n  return up to 20 entries.\n\n  http://api.channel4.com/pmlsd/4od/recently-added/videos.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/4od/episode-list/videos.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "4oD Clips Catch Up Feed",
				"tags": [
					"discoveryresources"
				],
				"operationId": "4oD_Clips_Catch_Up_Feed",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/4oD_Clips_Catch_Up_Feed",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/{brand-web-safe-title}/4od.atom": {
			"get": {
				"description": "A feed containing all available on-demand long-form content for a specified \n  brand. The entries for the 4oD feed contain references to each long-form \n  asset for a brand, ordered by series number and episode number.\n\n  http://api.channel4.com/pmlsd/[brand-web-safe-title]/4od.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/the-it-crowd/4od.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "4oD Feed",
				"tags": [
					"metadataresources"
				],
				"operationId": "4oD_Feed",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/metadataresources/4oD_Feed",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "brand-web-safe-title",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The title of the programme for which you seek on-demand content"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/atoz.atom": {
			"get": {
				"description": "Lists Channel 4 programmes alphabetically from A to Z, providing the same \n  functionality and information as is available in the A to Z section of the \n  Channel 4 Programmes page, http://www.channel4.com/programmes.\n\n  http://api.channel4.com/pmlsd/atoz.atom\n\n  http://api.channel4.com/pmlsd/atoz.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "A to Z Landing Feed",
				"tags": [
					"discoveryresources"
				],
				"operationId": "A_to_Z_Landing_Feed",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/DiscoveryResources/A_to_Z_Landing_Feed",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/atoz/{start_letter}.atom": {
			"get": {
				"description": "Lists Channel 4 programmes whose names begin with the associated letter.\n\n  http://api.channel4.com/pmlsd/atoz/start_letter.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/atoz/a.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "A to Z Letter Feed",
				"tags": [
					"discoveryresources"
				],
				"operationId": "A_to_Z_Letter_Feed",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/DiscoveryResources/A_to_Z_Letter_Feed",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "start_letter",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The letter of the alphabet for which you seek associated Channel 4 programmes"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/atoz/{start_letter}/page-{pageno}.atom": {
			"get": {
				"description": "Lists Channel 4 programmes whose names begin with the associated letter.\n\n  http://api.channel4.com/pmlsd/atoz/start_letter/page-{pageno}.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/atoz/a.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "A to Z Letter Feed(2)",
				"tags": [
					"discoveryresources"
				],
				"operationId": "A_to_Z_Letter_Feed(2)",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/DiscoveryResources/A_to_Z_Letter_Feed",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "start_letter",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The letter of the alphabet for which you seek associated Channel 4 programmes"
					},
					{
						"name": "pageno",
						"type": "integer",
						"in": "path",
						"required": true,
						"description": "Page number of results to return"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/{brand-web-safe-title}.atom": {
			"get": {
				"description": "The basis for all brand information\n\n  http://api.channel4.com/pmlsd/brand-web-safe-title.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/the-it-crowd.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "Hub Feed",
				"tags": [
					"metadataresources"
				],
				"operationId": "Hub_Feed",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/metadataresources/Hub_Feed",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "brand-web-safe-title",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The title of the programme for which you seek associated data"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/{brand-web-safe-title}/epg.atom": {
			"get": {
				"description": "This feed contains metadata about upcoming electronic programme guide (EPG) \n  information for a brand. The entry details upcoming transmission slots for \n  this brand.\n\n  http://api.channel4.com/pmlsd/brand-web-safe-title/epg.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/the-simpsons/epg.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "Brand EPG Atom Feed",
				"tags": [
					"metadataresources"
				],
				"operationId": "Brand_EPG_Atom_Feed",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/metadataresources/Brand_EPG_Atom_Feed",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "brand-web-safe-title",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "Title of the programme for which you seek EPG information"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/{brand-web-safe-title}/episode-guide.atom": {
			"get": {
				"description": "A feed containing metadata about all series for a specified brand. The \n  entries in this feed contain references to each of the series (where \n  metadata has been published), with some convenient links.\n\n  http://api.channel4.com/pmlsd/brand-web-safe-title/episode-guide.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/father-ted/episode-guide.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "Episode Guide Feed Series Landing",
				"tags": [
					"metadataresources"
				],
				"operationId": "Episode_Guide_Feed_Series_Landing",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/metadataresources/Episode_Guide_Feed_Series_Landing",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "brand-web-safe-title",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The title of the programme for which you seek episode-guide information"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/{brand-web-safe-title}/episode-guide/series-{series_number}.atom": {
			"get": {
				"description": "A feed containing metadata about all the episodes for a specific series. The \n  entries in this feed contain references to each of the episodes (where \n  metadata has been published), with some convenient links.\n\n  http://api.channel4.com/pmlsd/brand-web-safe-title/episode-guide/series-series_number.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/chelmsford-123/episode-guide/series-1.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "Episode Guide Feed Series Detail",
				"tags": [
					"metadataresources"
				],
				"operationId": "Episode_Guide_Feed_Series_Detail",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/metadataresources/Episode_Guide_Feed_Series_Detail",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "brand-web-safe-title",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The title of the programme for which you seek series-related information"
					},
					{
						"name": "series_number",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "Unique enumerated identifier of the series within its brand"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/{brand-web-safe-title}/episode-guide/series-{series_number}/episode-{episode_number}.atom": {
			"get": {
				"description": "A feed containing metadata about a specified episode. (This feed does not \n  contain any entries and only contains a feed element regarding this \n  episode.)\n\n  http://api.channel4.com/pmlsd/brand-web-safe-title/episode-guide/series-series_number/episode-episode_number.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/the-it-crowd/episode-guide/series-1/episode-1.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "Episode Guide Feed Episode Detail",
				"tags": [
					"metadataresources"
				],
				"operationId": "Episode_Guide_Feed_Episode_Detail",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/metadataresources/Episode_Guide_Feed_Episode_Detail",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "brand-web-safe-title",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "Title of the brand to which the episode belongs"
					},
					{
						"name": "series_number",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "Unique enumerated identifier of the series within its brand to which the episode belongs"
					},
					{
						"name": "episode_number",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "Unique enumerated identifier of the episode within its series"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/{brand-web-safe-title}/videos/all.atom": {
			"get": {
				"description": "A feed containing metadata about all the short-form (clip) videos. The clips \n  feed can be accessed at different levels: the content is then filtered \n  depending on the level, but the structure is identical.When accessed: from \n  the top, the feed contains all the clips for the brand;  at series level, \n  the feed contains only clips from the series; and  at episode level, the \n  feed contains only clips for the episode (and is very unlikely to require \n  pagination). The entries for the Clips Landing Feed contain references to \n  each short-form asset.\n\n  http://api.channel4.com/pmlsd/brand-web-safe-title/videos/all.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/peep-show/videos.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "Clips Landing Feed Brand Series and Episode Levels",
				"tags": [
					"metadataresources"
				],
				"operationId": "Clips_Landing_Feed_Brand_Series_and_Episode_Levels",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/metadataresources/Clips_Landing_Feed_Brand_Series_and_Episode_Levels",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "brand-web-safe-title",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "Title of brand to which clips belong"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/{brand-web-safe-title}/videos/series-{series_number}.atom": {
			"get": {
				"description": "A feed containing metadata about all the short-form (clip) videos. The clips \n  feed can be accessed at different levels: the content is then filtered \n  depending on the level, but the structure is identical.When accessed: from \n  the top, the feed contains all the clips for the brand;  at series level, \n  the feed contains only clips from the series; and  at episode level, the \n  feed contains only clips for the episode (and is very unlikely to require \n  pagination). The entries for the Clips Landing Feed contain references to \n  each short-form asset.\n\n  http://api.channel4.com/pmlsd/brand-web-safe-title/videos/series-series_number.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/peep-show/videos.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "Clips Landing Feed Brand Series and Episode Levels(2)",
				"tags": [
					"metadataresources"
				],
				"operationId": "Clips_Landing_Feed_Brand_Series_and_Episode_Levels(2)",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/metadataresources/Clips_Landing_Feed_Brand_Series_and_Episode_Levels",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "brand-web-safe-title",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "Title of brand to which clips belong"
					},
					{
						"name": "series_number",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "Unique identifier of series to which clips belong"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/{brand-web-safe-title}/videos/series-{series_number}/episode-{episode_number}.atom": {
			"get": {
				"description": "A feed containing metadata about all the short-form (clip) videos. The clips \n  feed can be accessed at different levels: the content is then filtered \n  depending on the level, but the structure is identical.When accessed: from \n  the top, the feed contains all the clips for the brand;  at series level, \n  the feed contains only clips from the series; and  at episode level, the \n  feed contains only clips for the episode (and is very unlikely to require \n  pagination). The entries for the Clips Landing Feed contain references to \n  each short-form asset.\n\n  http://api.channel4.com/pmlsd/brand-web-safe-title/videos/series-series_number/episode-episode_number.atom?apikey=xxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/peep-show/videos.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "Clips Landing Feed Brand Series and Episode Levels(3)",
				"tags": [
					"metadataresources"
				],
				"operationId": "Clips_Landing_Feed_Brand_Series_and_Episode_Levels(3)",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/metadataresources/Clips_Landing_Feed_Brand_Series_and_Episode_Levels",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "brand-web-safe-title",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "Title of brand to which clips belong"
					},
					{
						"name": "series_number",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "Unique identifier of series to which clips belong"
					},
					{
						"name": "episode_number",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "Unique identifier of episode to which clips belong"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/{brand-web-safe-title}/videos/{clip-asset-id}.atom": {
			"get": {
				"description": "A feed containing metadata about a single short-form video (clip).\n\n  http://api.channel4.com/pmlsd/brand-web-safe-title/videos/clip-asset-id.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/the-it-crowd/videos/TCGS_CLIP_0000001015.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "Clip Detail Atom Feed",
				"tags": [
					"metadataresources"
				],
				"operationId": "Clip_Detail_Atom_Feed",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/metadataresources/Clip_Detail_Atom_Feed",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "brand-web-safe-title",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "Title of the brand for which you seek a clip"
					},
					{
						"name": "clip-asset-id",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "Asset id for this clip"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/brands/4od.atom": {
			"get": {
				"description": "Lists all Channel 4 programmes available on 4oD.  By default, the programmes \n  are listed by title in alphabetical order (case unsensitive).\n\n  http://api.channel4.com/pmlsd/brands/4od.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/brands/4od.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "4oD Title All Brands Feed",
				"tags": [
					"discoveryresources"
				],
				"operationId": "4oD_Title_All_Brands_Feed",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/4oD_Title_All_Brands_Feed",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/brands/4od/page-{pageno}.atom": {
			"get": {
				"description": "Lists all Channel 4 programmes available on 4oD.  By default, the programmes \n  are listed by title in alphabetical order (case unsensitive).\n\n  http://api.channel4.com/pmlsd/brands/4od/page-{pageno}.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/brands/4od.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "4oD Title All Brands Feed(2)",
				"tags": [
					"discoveryresources"
				],
				"operationId": "4oD_Title_All_Brands_Feed(2)",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/4oD_Title_All_Brands_Feed",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "pageno",
						"type": "integer",
						"in": "path",
						"required": true,
						"description": "Page number of results to return"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/brands/4od/popular.atom": {
			"get": {
				"description": "Lists all Channel 4 programmes available on 4oD by popularity considering \n  the data gathered within the last 7 days.\n\n  http://api.channel4.com/pmlsd/brands/4od/popular.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/brands/4od/popular.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "4oD Popular All Brands Feed",
				"tags": [
					"discoveryresources"
				],
				"operationId": "4oD_Popular_All_Brands_Feed",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/4oD_Popular_All_Brands_Feed",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/brands/4od/popular/page-{pageno}.atom": {
			"get": {
				"description": "Lists all Channel 4 programmes available on 4oD by popularity considering \n  the data gathered within the last 7 days.\n\n  http://api.channel4.com/pmlsd/brands/4od/popular/page-{pageno}.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/brands/4od/popular.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "4oD Popular All Brands Feed(2)",
				"tags": [
					"discoveryresources"
				],
				"operationId": "4oD_Popular_All_Brands_Feed(2)",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/4oD_Popular_All_Brands_Feed",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "pageno",
						"type": "integer",
						"in": "path",
						"required": true,
						"description": "Page number of results to return"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/brands/popular.atom": {
			"get": {
				"description": "Lists all Channel 4 programmes by popularity considering the data gathered \n  within the last 7 days.\n\n  http://api.channel4.com/pmlsd/brands/popular.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/brands/popular.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "Popular Brands Feed",
				"tags": [
					"discoveryresources"
				],
				"operationId": "Popular_Brands_Feed",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/Popular_Brands_Feed",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/brands/popular/page-{pageno}.atom": {
			"get": {
				"description": "Lists all Channel 4 programmes by popularity considering the data gathered \n  within the last 7 days.\n\n  http://api.channel4.com/pmlsd/brands/popular/page-{pageno}.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/brands/popular.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "Popular Brands Feed(2)",
				"tags": [
					"discoveryresources"
				],
				"operationId": "Popular_Brands_Feed(2)",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/Popular_Brands_Feed",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "pageno",
						"type": "integer",
						"in": "path",
						"required": true,
						"description": "Page number of results to return"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/categories.atom": {
			"get": {
				"description": "Lists Channel 4 programmes by category (/ tag).\n\n  http://api.channel4.com/pmlsd/categories.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/categories.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "Categories Landing Feed",
				"tags": [
					"discoveryresources"
				],
				"operationId": "Categories_Landing_Feed",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/Categories_Landing_Feed",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/categories/{category}.atom": {
			"get": {
				"description": "Lists all Channel 4 programmes associated with the specified category (tag).  \n  By default, the programmes are listed in order of Transmission (TX) Date, \n  with the most-recently-transmitted programmes listed first.\n\n  http://api.channel4.com/pmlsd/categories/category.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/categories/animals.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "All Programmes by TX Date",
				"tags": [
					"discoveryresources"
				],
				"operationId": "All_Programmes_by_TX_Date",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/All_Programmes_by_TX_Date",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "category",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The name of the category for which you seek associated Channel 4 programmes. (For a full list of categories, please see http://api.channel4.com/pmlsd/categories.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx )"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/categories/{category}/channel/{channel}.atom": {
			"get": {
				"description": "Lists all Channel 4 programmes associated with the specified category (tag).  \n  By default, the programmes are listed in order of Transmission (TX) Date, \n  with the most-recently-transmitted programmes listed first.\n\n  http://api.channel4.com/pmlsd/categories/category/channel/[channel].atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/categories/animals.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "All Programmes by TX Date(2)",
				"tags": [
					"discoveryresources"
				],
				"operationId": "All_Programmes_by_TX_Date(2)",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/All_Programmes_by_TX_Date",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "category",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The name of the category for which you seek associated Channel 4 programmes. (For a full list of categories, please see http://api.channel4.com/pmlsd/categories.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx )"
					},
					{
						"name": "channel",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The name of the channel for which you seek associated Channel 4oD programmes",
						"enum": [
							"c4",
							"f4",
							"e4",
							"m4",
							"4m",
							"4s"
						]
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/categories/{category}/derived/ad.atom": {
			"get": {
				"description": "Lists all Channel 4 programmes associated with the specified category (tag).  \n  By default, the programmes are listed in order of Transmission (TX) Date, \n  with the most-recently-transmitted programmes listed first.\n\n  http://api.channel4.com/pmlsd/categories/category/derived/ad.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/categories/animals.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "All Programmes by TX Date(3)",
				"tags": [
					"discoveryresources"
				],
				"operationId": "All_Programmes_by_TX_Date(3)",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/All_Programmes_by_TX_Date",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "category",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The name of the category for which you seek associated Channel 4 programmes. (For a full list of categories, please see http://api.channel4.com/pmlsd/categories.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx )"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/categories/{category}/page-{pageno}.atom": {
			"get": {
				"description": "Lists all Channel 4 programmes associated with the specified category (tag).  \n  By default, the programmes are listed in order of Transmission (TX) Date, \n  with the most-recently-transmitted programmes listed first.\n\n  http://api.channel4.com/pmlsd/categories/category/page-{pageno}.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/categories/animals.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "All Programmes by TX Date(4)",
				"tags": [
					"discoveryresources"
				],
				"operationId": "All_Programmes_by_TX_Date(4)",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/All_Programmes_by_TX_Date",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "category",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The name of the category for which you seek associated Channel 4 programmes. (For a full list of categories, please see http://api.channel4.com/pmlsd/categories.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx )"
					},
					{
						"name": "pageno",
						"type": "integer",
						"in": "path",
						"required": true,
						"description": "Page number of results to return"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/categories/{category}/channel/{channel}/page-{pageno}.atom": {
			"get": {
				"description": "Lists all Channel 4 programmes associated with the specified category (tag).  \n  By default, the programmes are listed in order of Transmission (TX) Date, \n  with the most-recently-transmitted programmes listed first.\n\n  http://api.channel4.com/pmlsd/categories/category/channel/[channel]/page-{pageno}.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/categories/animals.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "All Programmes by TX Date(5)",
				"tags": [
					"discoveryresources"
				],
				"operationId": "All_Programmes_by_TX_Date(5)",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/All_Programmes_by_TX_Date",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "category",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The name of the category for which you seek associated Channel 4 programmes. (For a full list of categories, please see http://api.channel4.com/pmlsd/categories.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx )"
					},
					{
						"name": "channel",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The name of the channel for which you seek associated Channel 4oD programmes",
						"enum": [
							"c4",
							"f4",
							"e4",
							"m4",
							"4m",
							"4s"
						]
					},
					{
						"name": "pageno",
						"type": "integer",
						"in": "path",
						"required": true,
						"description": "Page number of results to return"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/categories/{category}/derived/ad/page-{pageno}.atom": {
			"get": {
				"description": "Lists all Channel 4 programmes associated with the specified category (tag).  \n  By default, the programmes are listed in order of Transmission (TX) Date, \n  with the most-recently-transmitted programmes listed first.\n\n  http://api.channel4.com/pmlsd/categories/category/derived/ad/page-{pageno}.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/categories/animals.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "All Programmes by TX Date(6)",
				"tags": [
					"discoveryresources"
				],
				"operationId": "All_Programmes_by_TX_Date(6)",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/All_Programmes_by_TX_Date",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "category",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The name of the category for which you seek associated Channel 4 programmes. (For a full list of categories, please see http://api.channel4.com/pmlsd/categories.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx )"
					},
					{
						"name": "pageno",
						"type": "integer",
						"in": "path",
						"required": true,
						"description": "Page number of results to return"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/categories/{category}/4od.atom": {
			"get": {
				"description": "Lists all Channel 4oD programmes associated with the specified category \n  (tag).By default, the programmes are listed in order of Transmission (TX) \n  Date, with the most-recently-transmitted programmes listed first.\n\n  http://api.channel4.com/pmlsd/categories/category/4od.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/categories/animals/4oD.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "4oD Programmes by TX Date",
				"tags": [
					"discoveryresources"
				],
				"operationId": "4oD_Programmes_by_TX_Date",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/4oD_Programmes_by_TX_Date",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "category",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The name of the category for which you seek associated Channel 4oD programmes. (For a full list of categories, please see http://api.channel4.com/pmlsd/categories.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx)"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/categories/{category}/channel/{channel}/4od.atom": {
			"get": {
				"description": "Lists all Channel 4oD programmes associated with the specified category \n  (tag).By default, the programmes are listed in order of Transmission (TX) \n  Date, with the most-recently-transmitted programmes listed first.\n\n  http://api.channel4.com/pmlsd/categories/category/channel/[channel]/4od.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/categories/animals/4oD.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "4oD Programmes by TX Date(2)",
				"tags": [
					"discoveryresources"
				],
				"operationId": "4oD_Programmes_by_TX_Date(2)",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/4oD_Programmes_by_TX_Date",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "category",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The name of the category for which you seek associated Channel 4oD programmes. (For a full list of categories, please see http://api.channel4.com/pmlsd/categories.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx)"
					},
					{
						"name": "channel",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The name of the channel for which you seek associated Channel 4oD programmes",
						"enum": [
							"c4",
							"f4",
							"e4",
							"m4",
							"4m",
							"4s"
						]
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/categories/{category}/derived/ad/4od.atom": {
			"get": {
				"description": "Lists all Channel 4oD programmes associated with the specified category \n  (tag).By default, the programmes are listed in order of Transmission (TX) \n  Date, with the most-recently-transmitted programmes listed first.\n\n  http://api.channel4.com/pmlsd/categories/category/derived/ad/4od.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/categories/animals/4oD.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "4oD Programmes by TX Date(3)",
				"tags": [
					"discoveryresources"
				],
				"operationId": "4oD_Programmes_by_TX_Date(3)",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/4oD_Programmes_by_TX_Date",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "category",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The name of the category for which you seek associated Channel 4oD programmes. (For a full list of categories, please see http://api.channel4.com/pmlsd/categories.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx)"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/categories/{category}/4od/page-{pageno}.atom": {
			"get": {
				"description": "Lists all Channel 4oD programmes associated with the specified category \n  (tag).By default, the programmes are listed in order of Transmission (TX) \n  Date, with the most-recently-transmitted programmes listed first.\n\n  http://api.channel4.com/pmlsd/categories/category/4od/page-{pageno}.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/categories/animals/4oD.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "4oD Programmes by TX Date(4)",
				"tags": [
					"discoveryresources"
				],
				"operationId": "4oD_Programmes_by_TX_Date(4)",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/4oD_Programmes_by_TX_Date",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "category",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The name of the category for which you seek associated Channel 4oD programmes. (For a full list of categories, please see http://api.channel4.com/pmlsd/categories.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx)"
					},
					{
						"name": "pageno",
						"type": "integer",
						"in": "path",
						"required": true,
						"description": "Page number of results to return"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/categories/{category}/channel/{channel}/4od/page-{pageno}.atom": {
			"get": {
				"description": "Lists all Channel 4oD programmes associated with the specified category \n  (tag).By default, the programmes are listed in order of Transmission (TX) \n  Date, with the most-recently-transmitted programmes listed first.\n\n  http://api.channel4.com/pmlsd/categories/category/channel/[channel]/4od/page-{pageno}.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/categories/animals/4oD.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "4oD Programmes by TX Date(5)",
				"tags": [
					"discoveryresources"
				],
				"operationId": "4oD_Programmes_by_TX_Date(5)",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/4oD_Programmes_by_TX_Date",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "category",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The name of the category for which you seek associated Channel 4oD programmes. (For a full list of categories, please see http://api.channel4.com/pmlsd/categories.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx)"
					},
					{
						"name": "channel",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The name of the channel for which you seek associated Channel 4oD programmes",
						"enum": [
							"c4",
							"f4",
							"e4",
							"m4",
							"4m",
							"4s"
						]
					},
					{
						"name": "pageno",
						"type": "integer",
						"in": "path",
						"required": true,
						"description": "Page number of results to return"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/categories/{category}/derived/ad/4od/page-{pageno}.atom": {
			"get": {
				"description": "Lists all Channel 4oD programmes associated with the specified category \n  (tag).By default, the programmes are listed in order of Transmission (TX) \n  Date, with the most-recently-transmitted programmes listed first.\n\n  http://api.channel4.com/pmlsd/categories/category/derived/ad/4od/page-{pageno}.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/categories/animals/4oD.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "4oD Programmes by TX Date(6)",
				"tags": [
					"discoveryresources"
				],
				"operationId": "4oD_Programmes_by_TX_Date(6)",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/4oD_Programmes_by_TX_Date",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "category",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The name of the category for which you seek associated Channel 4oD programmes. (For a full list of categories, please see http://api.channel4.com/pmlsd/categories.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx)"
					},
					{
						"name": "pageno",
						"type": "integer",
						"in": "path",
						"required": true,
						"description": "Page number of results to return"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/categories/{category}/4od/popular.atom": {
			"get": {
				"description": "Lists all Channel 4oD most popular brands for the given category within the \n  last 7 days, in order of popularity.\n\n  http://api.channel4.com/pmlsd/categories/category/4od/popular.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/categories/comedy/4od/popular.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "Most Popular Brands Feed",
				"tags": [
					"discoveryresources"
				],
				"operationId": "Most_Popular_Brands_Feed",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/Most_Popular_Brands_Feed",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "category",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The name of the category for which you seek associated Channel 4oD programmes. (For a full list of categories, please see http://api.channel4.com/pmlsd/categories.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx)"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/categories/{category}/popular.atom": {
			"get": {
				"description": "Lists all Channel 4oD most popular brands for the given category within the \n  last 7 days, in order of popularity.\n\n  http://api.channel4.com/pmlsd/categories/category/popular.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/categories/comedy/4od/popular.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "Most Popular Brands Feed(2)",
				"tags": [
					"discoveryresources"
				],
				"operationId": "Most_Popular_Brands_Feed(2)",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/Most_Popular_Brands_Feed",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "category",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The name of the category for which you seek associated Channel 4oD programmes. (For a full list of categories, please see http://api.channel4.com/pmlsd/categories.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx)"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/categories/{category}/channel/{channel}/4od/popular.atom": {
			"get": {
				"description": "Lists all Channel 4oD most popular brands for the given category within the \n  last 7 days, in order of popularity.\n\n  http://api.channel4.com/pmlsd/categories/category/channel/[channel]/4od/popular.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/categories/comedy/4od/popular.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "Most Popular Brands Feed(3)",
				"tags": [
					"discoveryresources"
				],
				"operationId": "Most_Popular_Brands_Feed(3)",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/Most_Popular_Brands_Feed",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "category",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The name of the category for which you seek associated Channel 4oD programmes. (For a full list of categories, please see http://api.channel4.com/pmlsd/categories.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx)"
					},
					{
						"name": "channel",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The name of the channel for which you seek associated Channel 4oD programmes",
						"enum": [
							"c4",
							"f4",
							"e4",
							"m4",
							"4m",
							"4s"
						]
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/categories/{category}/derived/ad/4od/popular.atom": {
			"get": {
				"description": "Lists all Channel 4oD most popular brands for the given category within the \n  last 7 days, in order of popularity.\n\n  http://api.channel4.com/pmlsd/categories/category/derived/ad/4od/popular.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/categories/comedy/4od/popular.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "Most Popular Brands Feed(4)",
				"tags": [
					"discoveryresources"
				],
				"operationId": "Most_Popular_Brands_Feed(4)",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/Most_Popular_Brands_Feed",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "category",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The name of the category for which you seek associated Channel 4oD programmes. (For a full list of categories, please see http://api.channel4.com/pmlsd/categories.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx)"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/categories/{category}/4od/popular/page-{pageno}.atom": {
			"get": {
				"description": "Lists all Channel 4oD most popular brands for the given category within the \n  last 7 days, in order of popularity.\n\n  http://api.channel4.com/pmlsd/categories/category/4od/popular/page-{pageno}.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/categories/comedy/4od/popular.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "Most Popular Brands Feed(5)",
				"tags": [
					"discoveryresources"
				],
				"operationId": "Most_Popular_Brands_Feed(5)",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/Most_Popular_Brands_Feed",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "category",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The name of the category for which you seek associated Channel 4oD programmes. (For a full list of categories, please see http://api.channel4.com/pmlsd/categories.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx)"
					},
					{
						"name": "pageno",
						"type": "integer",
						"in": "path",
						"required": true,
						"description": "Page number of results to return"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/categories/{category}/popular/page-{pageno}.atom": {
			"get": {
				"description": "Lists all Channel 4oD most popular brands for the given category within the \n  last 7 days, in order of popularity.\n\n  http://api.channel4.com/pmlsd/categories/category/popular/page-{pageno}.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/categories/comedy/4od/popular.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "Most Popular Brands Feed(6)",
				"tags": [
					"discoveryresources"
				],
				"operationId": "Most_Popular_Brands_Feed(6)",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/Most_Popular_Brands_Feed",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "category",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The name of the category for which you seek associated Channel 4oD programmes. (For a full list of categories, please see http://api.channel4.com/pmlsd/categories.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx)"
					},
					{
						"name": "pageno",
						"type": "integer",
						"in": "path",
						"required": true,
						"description": "Page number of results to return"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/categories/{category}/channel/{channel}/4od/popular/page-{pageno}.atom": {
			"get": {
				"description": "Lists all Channel 4oD most popular brands for the given category within the \n  last 7 days, in order of popularity.\n\n  http://api.channel4.com/pmlsd/categories/category/channel/[channel]/4od/popular/page-{pageno}.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/categories/comedy/4od/popular.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "Most Popular Brands Feed(7)",
				"tags": [
					"discoveryresources"
				],
				"operationId": "Most_Popular_Brands_Feed(7)",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/Most_Popular_Brands_Feed",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "category",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The name of the category for which you seek associated Channel 4oD programmes. (For a full list of categories, please see http://api.channel4.com/pmlsd/categories.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx)"
					},
					{
						"name": "channel",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The name of the channel for which you seek associated Channel 4oD programmes",
						"enum": [
							"c4",
							"f4",
							"e4",
							"m4",
							"4m",
							"4s"
						]
					},
					{
						"name": "pageno",
						"type": "integer",
						"in": "path",
						"required": true,
						"description": "Page number of results to return"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/categories/{category}/derived/ad/4od/popular/page-{pageno}.atom": {
			"get": {
				"description": "Lists all Channel 4oD most popular brands for the given category within the \n  last 7 days, in order of popularity.\n\n  http://api.channel4.com/pmlsd/categories/category/derived/ad/4od/popular/page-{pageno}.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/categories/comedy/4od/popular.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "Most Popular Brands Feed(8)",
				"tags": [
					"discoveryresources"
				],
				"operationId": "Most_Popular_Brands_Feed(8)",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/Most_Popular_Brands_Feed",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "category",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The name of the category for which you seek associated Channel 4oD programmes. (For a full list of categories, please see http://api.channel4.com/pmlsd/categories.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx)"
					},
					{
						"name": "pageno",
						"type": "integer",
						"in": "path",
						"required": true,
						"description": "Page number of results to return"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/categories/{category}/4od/title.atom": {
			"get": {
				"description": "Lists all Channel 4oD programmes associated with the specified category \n  (tag), alphanumerically in order of Title.\n\n  http://api.channel4.com/pmlsd/categories/category/4od/title.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/categories/religion-and-belief/4oD/title.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "4oD Programmes by Title",
				"tags": [
					"discoveryresources"
				],
				"operationId": "4oD_Programmes_by_Title",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/4oD_Programmes_by_Title",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "category",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The name of the category for which you seek associated Channel 4oD programmes. (For a full list of categories, please see http://api.channel4.com/pmlsd/categories.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx)"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/categories/{category}/channel/{channel}/4od/title.atom": {
			"get": {
				"description": "Lists all Channel 4oD programmes associated with the specified category \n  (tag), alphanumerically in order of Title.\n\n  http://api.channel4.com/pmlsd/categories/category/channel/[channel]/4od/title.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/categories/religion-and-belief/4oD/title.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "4oD Programmes by Title(2)",
				"tags": [
					"discoveryresources"
				],
				"operationId": "4oD_Programmes_by_Title(2)",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/4oD_Programmes_by_Title",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "category",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The name of the category for which you seek associated Channel 4oD programmes. (For a full list of categories, please see http://api.channel4.com/pmlsd/categories.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx)"
					},
					{
						"name": "channel",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The name of the channel for which you seek associated Channel 4oD programmes",
						"enum": [
							"c4",
							"f4",
							"e4",
							"m4",
							"4m",
							"4s"
						]
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/categories/{category}/derived/ad/4od/title.atom": {
			"get": {
				"description": "Lists all Channel 4oD programmes associated with the specified category \n  (tag), alphanumerically in order of Title.\n\n  http://api.channel4.com/pmlsd/categories/category/derived/ad/4od/title.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/categories/religion-and-belief/4oD/title.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "4oD Programmes by Title(3)",
				"tags": [
					"discoveryresources"
				],
				"operationId": "4oD_Programmes_by_Title(3)",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/4oD_Programmes_by_Title",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "category",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The name of the category for which you seek associated Channel 4oD programmes. (For a full list of categories, please see http://api.channel4.com/pmlsd/categories.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx)"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/categories/{category}/4od/title/page-{pageno}.atom": {
			"get": {
				"description": "Lists all Channel 4oD programmes associated with the specified category \n  (tag), alphanumerically in order of Title.\n\n  http://api.channel4.com/pmlsd/categories/category/4od/title/page-{pageno}.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/categories/religion-and-belief/4oD/title.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "4oD Programmes by Title(4)",
				"tags": [
					"discoveryresources"
				],
				"operationId": "4oD_Programmes_by_Title(4)",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/4oD_Programmes_by_Title",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "category",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The name of the category for which you seek associated Channel 4oD programmes. (For a full list of categories, please see http://api.channel4.com/pmlsd/categories.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx)"
					},
					{
						"name": "pageno",
						"type": "integer",
						"in": "path",
						"required": true,
						"description": "Page number of results to return"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/categories/{category}/channel/{channel}/4od/title/page-{pageno}.atom": {
			"get": {
				"description": "Lists all Channel 4oD programmes associated with the specified category \n  (tag), alphanumerically in order of Title.\n\n  http://api.channel4.com/pmlsd/categories/category/channel/[channel]/4od/title/page-{pageno}.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/categories/religion-and-belief/4oD/title.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "4oD Programmes by Title(5)",
				"tags": [
					"discoveryresources"
				],
				"operationId": "4oD_Programmes_by_Title(5)",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/4oD_Programmes_by_Title",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "category",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The name of the category for which you seek associated Channel 4oD programmes. (For a full list of categories, please see http://api.channel4.com/pmlsd/categories.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx)"
					},
					{
						"name": "channel",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The name of the channel for which you seek associated Channel 4oD programmes",
						"enum": [
							"c4",
							"f4",
							"e4",
							"m4",
							"4m",
							"4s"
						]
					},
					{
						"name": "pageno",
						"type": "integer",
						"in": "path",
						"required": true,
						"description": "Page number of results to return"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/categories/{category}/derived/ad/4od/title/page-{pageno}.atom": {
			"get": {
				"description": "Lists all Channel 4oD programmes associated with the specified category \n  (tag), alphanumerically in order of Title.\n\n  http://api.channel4.com/pmlsd/categories/category/derived/ad/4od/title/page-{pageno}.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/categories/religion-and-belief/4oD/title.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "4oD Programmes by Title(6)",
				"tags": [
					"discoveryresources"
				],
				"operationId": "4oD_Programmes_by_Title(6)",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/4oD_Programmes_by_Title",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "category",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The name of the category for which you seek associated Channel 4oD programmes. (For a full list of categories, please see http://api.channel4.com/pmlsd/categories.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx)"
					},
					{
						"name": "pageno",
						"type": "integer",
						"in": "path",
						"required": true,
						"description": "Page number of results to return"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/categories/{category}/title.atom": {
			"get": {
				"description": "Lists all Channel 4 programmes associated with the specified category (tag), \n  alphanumerically in order of Title.\n\n  http://api.channel4.com/pmlsd/categories/category/title.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/categories/history/title.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "All Programmes by Title",
				"tags": [
					"discoveryresources"
				],
				"operationId": "All_Programmes_by_Title",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/All_Programmes_by_Title",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "category",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The name of the category for which you seek associated Channel 4 programmes. (For a full list of categories, please see http://api.channel4.com/pmlsd/categories.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx)"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/categories/{category}/channel/{channel}/title.atom": {
			"get": {
				"description": "Lists all Channel 4 programmes associated with the specified category (tag), \n  alphanumerically in order of Title.\n\n  http://api.channel4.com/pmlsd/categories/category/channel/[channel]/title.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/categories/history/title.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "All Programmes by Title(2)",
				"tags": [
					"discoveryresources"
				],
				"operationId": "All_Programmes_by_Title(2)",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/All_Programmes_by_Title",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "category",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The name of the category for which you seek associated Channel 4 programmes. (For a full list of categories, please see http://api.channel4.com/pmlsd/categories.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx)"
					},
					{
						"name": "channel",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The name of the channel for which you seek associated Channel 4oD programmes",
						"enum": [
							"c4",
							"f4",
							"e4",
							"m4",
							"4m",
							"4s"
						]
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/categories/{category}/derived/ad/title.atom": {
			"get": {
				"description": "Lists all Channel 4 programmes associated with the specified category (tag), \n  alphanumerically in order of Title.\n\n  http://api.channel4.com/pmlsd/categories/category/derived/ad/title.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/categories/history/title.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "All Programmes by Title(3)",
				"tags": [
					"discoveryresources"
				],
				"operationId": "All_Programmes_by_Title(3)",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/All_Programmes_by_Title",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "category",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The name of the category for which you seek associated Channel 4 programmes. (For a full list of categories, please see http://api.channel4.com/pmlsd/categories.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx)"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/categories/{category}/title/page-{pageno}.atom": {
			"get": {
				"description": "Lists all Channel 4 programmes associated with the specified category (tag), \n  alphanumerically in order of Title.\n\n  http://api.channel4.com/pmlsd/categories/category/title/page-{pageno}.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/categories/history/title.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "All Programmes by Title(4)",
				"tags": [
					"discoveryresources"
				],
				"operationId": "All_Programmes_by_Title(4)",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/All_Programmes_by_Title",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "category",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The name of the category for which you seek associated Channel 4 programmes. (For a full list of categories, please see http://api.channel4.com/pmlsd/categories.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx)"
					},
					{
						"name": "pageno",
						"type": "integer",
						"in": "path",
						"required": true,
						"description": "Page number of results to return"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/categories/{category}/channel/{channel}/title/page-{pageno}.atom": {
			"get": {
				"description": "Lists all Channel 4 programmes associated with the specified category (tag), \n  alphanumerically in order of Title.\n\n  http://api.channel4.com/pmlsd/categories/category/channel/[channel]/title/page-{pageno}.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/categories/history/title.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "All Programmes by Title(5)",
				"tags": [
					"discoveryresources"
				],
				"operationId": "All_Programmes_by_Title(5)",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/All_Programmes_by_Title",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "category",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The name of the category for which you seek associated Channel 4 programmes. (For a full list of categories, please see http://api.channel4.com/pmlsd/categories.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx)"
					},
					{
						"name": "channel",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The name of the channel for which you seek associated Channel 4oD programmes",
						"enum": [
							"c4",
							"f4",
							"e4",
							"m4",
							"4m",
							"4s"
						]
					},
					{
						"name": "pageno",
						"type": "integer",
						"in": "path",
						"required": true,
						"description": "Page number of results to return"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/categories/{category}/derived/ad/title/page-{pageno}.atom": {
			"get": {
				"description": "Lists all Channel 4 programmes associated with the specified category (tag), \n  alphanumerically in order of Title.\n\n  http://api.channel4.com/pmlsd/categories/category/derived/ad/title/page-{pageno}.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/categories/history/title.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "All Programmes by Title(6)",
				"tags": [
					"discoveryresources"
				],
				"operationId": "All_Programmes_by_Title(6)",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/All_Programmes_by_Title",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "category",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The name of the category for which you seek associated Channel 4 programmes. (For a full list of categories, please see http://api.channel4.com/pmlsd/categories.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx)"
					},
					{
						"name": "pageno",
						"type": "integer",
						"in": "path",
						"required": true,
						"description": "Page number of results to return"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/collections/{collection_name}/4od.atom": {
			"get": {
				"description": "Collections are editorially controlled groups of brands, series, episodes or \n  other collections used for promotion and discovery of content. A SIMPLE \n  collection can contain an assortment of Brands, Series, Episodes or Freeform \n  items. A GROUP collection contains other collections.\n\n  http://api.channel4.com/pmlsd/collections/collection_name/4od.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/collections/4od-home-promo/4od.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "Collections Feed",
				"tags": [
					"discoveryresources"
				],
				"operationId": "Collections_Feed",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/Collections_Feed",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "collection_name",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "Web safe title for the collection."
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/collections/{collection_name}.atom": {
			"get": {
				"description": "Collections are editorially controlled groups of brands, series, episodes or \n  other collections used for promotion and discovery of content. A SIMPLE \n  collection can contain an assortment of Brands, Series, Episodes or Freeform \n  items. A GROUP collection contains other collections.\n\n  http://api.channel4.com/pmlsd/collections/collection_name.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/collections/4od-home-promo/4od.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "Collections Feed(2)",
				"tags": [
					"discoveryresources"
				],
				"operationId": "Collections_Feed(2)",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/Collections_Feed",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "collection_name",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "Web safe title for the collection."
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/collections/{collection_name}/flattened/4od.atom": {
			"get": {
				"description": "The Flattened Collections Feed is only applicable for GROUP collections and \n  its purpose is mainly return 3 items (BRAND, SERIES or EPSIODE) of each of \n  the simple collections assigned to the GROUP.\n\n  http://api.channel4.com/pmlsd/collections/collection_name/flattened/4od.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/collections/4od-home-promo/flattened/4od.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "Flattened Collection Feed",
				"tags": [
					"discoveryresources"
				],
				"operationId": "Flattened_Collection_Feed",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/Flattened_Collection_Feed",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "collection_name",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "Web safe title for the collection."
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/collections/{collection_name}/flattened.atom": {
			"get": {
				"description": "The Flattened Collections Feed is only applicable for GROUP collections and \n  its purpose is mainly return 3 items (BRAND, SERIES or EPSIODE) of each of \n  the simple collections assigned to the GROUP.\n\n  http://api.channel4.com/pmlsd/collections/collection_name/flattened.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/collections/4od-home-promo/flattened/4od.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "Flattened Collection Feed(2)",
				"tags": [
					"discoveryresources"
				],
				"operationId": "Flattened_Collection_Feed(2)",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/Flattened_Collection_Feed",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "collection_name",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "Web safe title for the collection."
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/coming-soon.atom": {
			"get": {
				"description": "Coming Soon feed display a list of episodes coming soon to linear TV so that \n  I can promote new Channel 4 content.\n\n  http://api.channel4.com/pmlsd/coming-soon.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/coming-soon.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "Coming Soon feed",
				"tags": [
					"metadataresources"
				],
				"operationId": "Coming_Soon_feed",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/metadataresources/Coming_Soon_feed",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/coming-soon/{category}.atom": {
			"get": {
				"description": "Coming Soon feed display a list of episodes coming soon to linear TV so that \n  I can promote new Channel 4 content.\n\n  http://api.channel4.com/pmlsd/coming-soon/[category].atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/coming-soon.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "Coming Soon feed(2)",
				"tags": [
					"metadataresources"
				],
				"operationId": "Coming_Soon_feed(2)",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/metadataresources/Coming_Soon_feed",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "category",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The category websafe_title to filter the coming soon programmes on TV."
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/programme/{programme-id}.atom": {
			"get": {
				"description": "A feed containing all long-form content currently or previously available \n  for a specified Programme Id. The entries for the Programme feed contain \n  references to long-form assets for each platform.\n\n  http://api.channel4.com/pmlsd/programme/[programme-id].atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/programme/33881-001/4od.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "Programme Feed",
				"tags": [
					"metadataresources"
				],
				"operationId": "Programme_Feed",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/metadataresources/Programme_Feed",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "programme-id",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The websafe programme identifier for the episode for which you seek on-demand content"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/search.atom": {
			"get": {
				"description": "Lists all Channel 4 programmes where title (brand name) matching the search \n  term. Matches are made from the beginning of individual words in the title.\n\n  http://api.channel4.com/pmlsd/search.atom?q=search-term&apikey=xxx\n\n  http://api.channel4.com/pmlsd/search.atom?q=the+it+crowd&apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "Search Feed",
				"tags": [
					"discoveryresources"
				],
				"operationId": "Search_Feed",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/Search_Feed",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "q",
						"type": "string",
						"in": "query",
						"required": true,
						"description": "The programme name to look for, minimum length: 2 chars.Looking for programme names with special chars might be URL encoded."
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/search/{q}.atom": {
			"get": {
				"description": "Lists all Channel 4 programmes where title (brand name) matching the search \n  term. Matches are made from the beginning of individual words in the title.\n\n  http://api.channel4.com/pmlsd/search/search-term.atom?apikey=xxx\n\n  http://api.channel4.com/pmlsd/search.atom?q=the+it+crowd&apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "Search Feed(2)",
				"tags": [
					"discoveryresources"
				],
				"operationId": "Search_Feed(2)",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/Search_Feed",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "q",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The programme name to look for, minimum length: 2 chars.Looking for programme names with special chars might be URL encoded."
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/search/page-{pageno}.atom": {
			"get": {
				"description": "Lists all Channel 4 programmes where title (brand name) matching the search \n  term. Matches are made from the beginning of individual words in the title.\n\n  http://api.channel4.com/pmlsd/search/page-{pageno}.atom?q=search-term&apikey=xxx\n\n  http://api.channel4.com/pmlsd/search.atom?q=the+it+crowd&apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "Search Feed(3)",
				"tags": [
					"discoveryresources"
				],
				"operationId": "Search_Feed(3)",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/Search_Feed",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "q",
						"type": "string",
						"in": "query",
						"required": true,
						"description": "The programme name to look for, minimum length: 2 chars.Looking for programme names with special chars might be URL encoded."
					},
					{
						"name": "pageno",
						"type": "integer",
						"in": "path",
						"required": true,
						"description": "Page number of results to return"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/search/{q}/page-{pageno}.atom": {
			"get": {
				"description": "Lists all Channel 4 programmes where title (brand name) matching the search \n  term. Matches are made from the beginning of individual words in the title.\n\n  http://api.channel4.com/pmlsd/search/search-term/page-{pageno}.atom?apikey=xxx\n\n  http://api.channel4.com/pmlsd/search.atom?q=the+it+crowd&apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "Search Feed(4)",
				"tags": [
					"discoveryresources"
				],
				"operationId": "Search_Feed(4)",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/Search_Feed",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "q",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The programme name to look for, minimum length: 2 chars.Looking for programme names with special chars might be URL encoded."
					},
					{
						"name": "pageno",
						"type": "integer",
						"in": "path",
						"required": true,
						"description": "Page number of results to return"
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/tv-listings/daily/{yyyy}/{mm}/{dd}.atom": {
			"get": {
				"description": "EPG Information of daily broadcast content aired per channels, according to \n  broadcast date\n\n  http://api.channel4.com/pmlsd/tv-listings/daily/[yyyy]/[mm]/[dd].atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/tv-listings/daily/2010/11/28.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "TV Listings Feed",
				"tags": [
					"discoveryresources"
				],
				"operationId": "TV_Listings_Feed",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/TV_Listings_Feed",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "yyyy",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The date for which you wish to see programming information. Note the schedule days start from 6am and run until 6am on the next calendar day."
					},
					{
						"name": "mm",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The date for which you wish to see programming information. Note the schedule days start from 6am and run until 6am on the next calendar day."
					},
					{
						"name": "dd",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The date for which you wish to see programming information. Note the schedule days start from 6am and run until 6am on the next calendar day."
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		},
		"/tv-listings/daily/{yyyy}/{mm}/{dd}/{channel}.atom": {
			"get": {
				"description": "EPG Information of daily broadcast content aired per channels, according to \n  broadcast date\n\n  http://api.channel4.com/pmlsd/tv-listings/daily/[yyyy]/[mm]/[dd]/[channel].atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx\n\n  http://api.channel4.com/pmlsd/tv-listings/daily/2010/11/28.atom?apikey=xxxxxxxxxxxxxxxxxxxxxxxx",
				"summary": "TV Listings Feed(2)",
				"tags": [
					"discoveryresources"
				],
				"operationId": "TV_Listings_Feed(2)",
				"x-documentation": "http://developer.channel4.com/docs/read/programmesapiguide/discoveryresources/TV_Listings_Feed",
				"produces": [
					"application/xml"
				],
				"parameters": [
					{
						"$ref": "#/parameters/platform"
					},
					{
						"name": "yyyy",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The date for which you wish to see programming information. Note the schedule days start from 6am and run until 6am on the next calendar day."
					},
					{
						"name": "mm",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The date for which you wish to see programming information. Note the schedule days start from 6am and run until 6am on the next calendar day."
					},
					{
						"name": "dd",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The date for which you wish to see programming information. Note the schedule days start from 6am and run until 6am on the next calendar day."
					},
					{
						"name": "channel",
						"type": "string",
						"in": "path",
						"required": true,
						"description": "The EPG for a specific channel (c4, e4, m4, 4m, f4, 4s)",
						"enum": [
							"c4",
							"f4",
							"e4",
							"m4",
							"4m",
							"4s"
						]
					}
				],
				"responses": {
					"200": {
						"description": "Default response",
						"schema": {
							"$ref": "#/definitions/atom"
						}
					}
				}
			}
		}
	},
	"definitions": {
		"atom": {
			"title": "converted/atomSchema.xsd",
			"description": "This version of the Atom schema is based on version 1.0 of the format specifications, found here http://www.atomenabled.org/developers/syndication/atom-format-spec.php. The original namespace was http://www.w3.org/2005/Atom but we changed it to http://www.opengis.net/atom/2005 to avoid conflicting definitions of the same namespace in the future. NOT DONE YET. There is no XSD official schema for atom but this one seems to be the most known: http://www.kbcafe.com/rss/atom.xsd.xml (The Atom Publishing Protocol was issued as a Proposed Standard in IETF RFC 5023 in October 2007 http://tools.ietf.org/html/rfc5023)\nAn Atom document may have two root elements, feed and entry, as defined in section 2.",
			"type": "object",
			"properties": {
				"feed": {
					"$ref": "#/definitions/feedType"
				}
			},
			"required": [
				"feed"
			],
			"additionalProperties": false
		},
		"entry": {
			"$ref": "#/definitions/entryType"
		},
		"textTypeType": {
			"enum": [
				"text",
				"html",
				"xhtml"
			]
		},
		"MimeType": {
			"type": "string",
			"description": "XML encoded identifier of a standard MIME type, possibly a parameterized MIME type. Copied from ows 2.0.1",
			"pattern": "(application|audio|image|text|video|message|multipart|model)/.+(;\\s*.+=.+)*"
		},
		"ContentTypeType": {
			"type": "object",
			"additionalProperties": false,
			"x-oneOf": [
				{
					"$ref": "#/definitions/textTypeType"
				},
				{
					"$ref": "#/definitions/MimeType"
				}
			]
		},
		"emailType": {
			"type": "string",
			"description": "Schema definition for an email address.",
			"pattern": "\\w+@(\\w+\\.)+\\w+"
		},
		"KnownRelCodeType": {
			"description": "alternate: The value \"alternate\" signifies that the IRI in the value of the href attribute identifies an alternate version of the resource described by the containing element.related: The value \"related\" signifies that the IRI in the value of the href attribute identifies a resource related to the resource described by the containing element. For example, the feed for a site that discusses the performance of the search engine at \"http://search.example.com\" might contain, as a child of atom:feed. An identical link might appear as a child of any atom:entry whose content contains a discussion of that same search engine.self: The value \"self\" signifies that the IRI in the value of the href attribute identifies a resource equivalent to the containing element.enclosure: The value \"enclosure\" signifies that the IRI in the value of the href attribute identifies a related resource that is potentially large in size and might require special handling. For atom:link elements with rel=\"enclosure\", the length attribute SHOULD be provided.via: The value \"via\" signifies that the IRI in the value of the href attribute identifies a resource that is the source of the information provided in the containing element.",
			"enum": [
				"alternate",
				"related",
				"self",
				"enclosure",
				"via"
			]
		},
		"RelCodeType": {
			"type": "object",
			"additionalProperties": false,
			"x-oneOf": [
				{
					"$ref": "#/definitions/KnownRelCodeType"
				},
				{
					"type": "string"
				}
			]
		},
		"textType": {
			"type": "object",
			"description": "The Atom text construct is defined in section 3.1 of the format spec.",
			"additionalProperties": true,
			"x-anyOf": [
				{
					"$ref": "#/definitions/commonAttributes"
				},
				{
					"properties": {
						"type": {
							"$ref": "#/definitions/textTypeType"
						}
					}
				}
			]
		},
		"personType": {
			"type": "object",
			"description": "The Atom person construct is defined in section 3.2 of the format spec.",
			"additionalProperties": true,
			"x-anyOf": [
				{
					"$ref": "#/definitions/commonAttributes"
				},
				{
					"properties": {
						"name": {
							"type": "string"
						},
						"uri": {
							"$ref": "#/definitions/uriType"
						},
						"email": {
							"$ref": "#/definitions/emailType"
						}
					}
				}
			]
		},
		"feedType": {
			"type": "object",
			"description": "The Atom feed construct is defined in section 4.1.1 of the format spec.",
			"additionalProperties": true,
			"x-anyOf": [
				{
					"$ref": "#/definitions/commonAttributes"
				},
				{
					"properties": {
						"author": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string",
									"description": "Name of author / owner"
								}
							}
						},
						"category": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/categoryType"
							}
						},
						"contributor": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/personType"
							}
						},
						"generator": {
							"type": "object",
							"description": "Identifies the agent used to generate the feed",
							"properties": {
								"version": {
									"type": "number",
									"description": "Identifies the version of the agent used to generate the feed"
								}
							}
						},
						"icon": {
							"$ref": "#/definitions/iconType"
						},
						"id": {
							"$ref": "#/definitions/idType"
						},
						"link": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/linkType"
							}
						},
						"logo": {
							"$ref": "#/definitions/logoType"
						},
						"rights": {
							"$ref": "#/definitions/textType"
						},
						"subtitle": {
							"$ref": "#/definitions/textType"
						},
						"title": {
							"$ref": "#/definitions/textType"
						},
						"updated": {
							"$ref": "#/definitions/dateTimeType"
						},
						"entry": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/entryType"
							}
						},
						"dc:relation": {
							"type": "object",
							"properties": {
								"platformClientVersion": {
									"type": "number",
									"description": "Identifies the version of the specified platform client application compatible with this feed."
								},
								"BrandFlattened": {
									"type": "boolean",
									"description": "Boolean indicating whether there is no Series -> Episode structure in this brand (\"false\" indicating that there is such a structure)"
								},
								"presentationBrand": {
									"type": "string",
									"description": "The presentation brand"
								},
								"BrandWebSafeTitle": {
									"type": "string",
									"description": "Title of the brand safe for web linking (no whitespaces, no special chars...)"
								},
								"ProgrammeType": {
									"type": "string",
									"description": "Displays metadata code (as detailed in the following table) in a meaningful way on the application according to the specified programme type."
								},
								"4oDSeriesCount": {
									"type": "integer",
									"description": "Number of available 4oD series for this Brand"
								},
								"4oDProgrammeCount": {
									"type": "integer",
									"description": "Number of available brands in this category beginning with this letter (4oD only)"
								},
								"New4oDSeriesAvailable": {
									"type": "boolean",
									"description": "Flags that notifies clients when a Brand contains NEW series."
								},
								"AllProgrammeCount": {
									"type": "integer",
									"description": "Number of available brands in this category beginning with this letter (all programmes)"
								},
								"BrandTitle": {
									"type": "string",
									"description": "Title of brand"
								},
								"comingSoonTo4oD": {
									"type": "string",
									"description": "If the brand is coming to be available on 4oD soon this empty element should be included."
								},
								"firstTXDate": {
									"type": "string",
									"format": "date-time",
									"description": "Date of first broadcast (optional). This is based on EPG or, when EPG data is not available for the episode, it can be set editorially (significant date)"
								},
								"firstTXChannel": {
									"type": "string",
									"description": "First TX channel information for this episode"
								},
								"lastTXDate": {
									"type": "string",
									"format": "date-time",
									"description": "Date of last broadcast (optional). This is based on EPG ignoring repeats and giving preference to the channel that the brand is primarily targeted at (preferred channel)"
								},
								"lastTXChannel": {
									"type": "string",
									"description": "Channel of last broadcast (optional). This is based on EPG ignoring repeats and giving preference to the channel that the brand is primarily targeted at (preferred channel)"
								},
								"SeriesNumber": {
									"type": "integer",
									"description": "The series to which this episode belongs"
								},
								"EpisodeNumber": {
									"type": "integer",
									"description": "The episode number within the series"
								},
								"Sharable": {
									"type": "boolean",
									"description": "Boolean value indicating if clips for this brand are sharable"
								},
								"AgeRating": {
									"type": "integer",
									"description": "Channel 4-specific recommended lower age-limit for viewers (0, 16 or 18)"
								},
								"Guidance": {
									"type": "string",
									"description": "Channel 4-specific warning text about specific disturbing content, adult humour, nudity, etc., if applicable"
								},
								"Duration": {
									"type": "string",
									"description": "Length in minutes and seconds - does not include ad breaks"
								},
								"ExternalVideoId": {
									"type": "string",
									"description": "Clip Asset_id value from the Clip table (a.k.a. Brightcode id)."
								},
								"CategoryType": {
									"type": "string",
									"description": "Type to which the category belongs (if applicable).(Valid values are 'Channel', 'Display' or 'None'.)"
								},
								"CategoryOrder": {
									"type": "integer",
									"description": "Enumerated order of category within its type(e.g., 'Channel' might have Food=1, More4=2, etc.)(Appears in feed only if CategoryType<>'None'.)"
								},
								"Synopsis": {
									"type": "string",
									"description": "Summary of this feed"
								},
								"resourceType": {
									"type": "string",
									"description": "The type of the entry"
								},
								"programmeId": {
									"type": "string",
									"description": "Indicates the contract and programme numbers"
								},
								"RelatedEntryId": {
									"type": "string",
									"description": "The episode guide entry related to this episode"
								},
								"TXChannel": {
									"type": "string",
									"description": "First TX channel information for this episode"
								},
								"Subtitles": {
									"type": "boolean",
									"description": "Boolean indicating if subtitles are available for this episode"
								},
								"AudioDescription": {
									"type": "boolean",
									"description": "Boolean indicating if an audio description is available for this episode"
								},
								"LoginRequired": {
									"type": "boolean",
									"description": "Boolean indicating if the user has to be logged-in in order to play this episode."
								},
								"ParentCollectionId": {
									"type": "string",
									"description": "The ID of the Parent Collection where the resource is assigned to."
								},
								"TotalResults": {
									"type": "integer",
									"description": "Number of entries what match the search-term"
								},
								"StartOffset": {
									"type": "integer",
									"description": ""
								}
							}
						},
						"fh:complete": {
							"type": "string",
							"description": "Presence of this element indicates no pagination"
						},
						"category (primary)": {
							"type": "string",
							"description": "Primary category (brand must have ONE)"
						},
						"category (secondary)": {
							"type": "string",
							"description": "Secondary category (brand may have any number)"
						},
						"media:group": {
							"type": "object",
							"properties": {
								"media:player": {
									"type": "string",
									"format": "uri",
									"description": "URL to media-player version of episode"
								},
								"media:thumbnail": {
									"type": "string",
									"description": "URL to medium-sized image of this episode"
								},
								"media:rating": {
									"type": "string",
									"description": "Flag to show whether episode is suitable for adults only (\"adult\") or for all viewers (\"nonadult\")"
								},
								"media:copyright": {
									"type": "string",
									"description": "Link to copyright / T&C information"
								},
								"media:restriction": {
									"type": "string",
									"description": "Restriction flag (\"allow\") and list of country or state codes where episode is accessible to website users"
								},
								"media:rights": {
									"type": "string",
									"description": "Status of media rights under which Channel 4 provides episode content"
								},
								"media:category": {
									"type": "string",
									"description": "Defines the type of short-form item. Its value can be one of the next: EXTRACT, PREVIEW, EXTRA, TRAILER"
								},
								"media:content": {
									"type": "object",
									"properties": {
										"media:player": {
											"type": "string",
											"format": "uri",
											"description": "URL to media-player version of episode"
										},
										"media:thumbnail": {
											"type": "string",
											"description": "URL to medium-sized image of this episode"
										},
										"media:rating": {
											"type": "string",
											"description": "Flag to show whether episode is suitable for adults only (\"adult\") or for all viewers (\"nonadult\")"
										},
										"media:copyright": {
											"type": "string",
											"description": "Link to copyright / T&C information"
										},
										"media:restriction": {
											"type": "string",
											"description": "Restriction flag (\"allow\") and list of country or state codes where episode is accessible to website users"
										},
										"media:rights": {
											"type": "string",
											"description": "Status of media rights under which Channel 4 provides episode content"
										},
										"dc:relation": {
											"type": "object",
											"properties": {
												"requestType": {
													"type": "string",
													"enum": [
														"ARCHIVE",
														"CATCHUP"
													],
													"description": "Indicates catchup or archive content"
												},
												"deliveryType": {
													"type": "string",
													"enum": [
														"STREAM",
														"DOWNLOAD"
													],
													"description": "Indicates STREAMING or FOR DOWNLOAD content"
												},
												"AgeRating": {
													"type": "integer",
													"description": "Channel 4-specific recommended lower age-limit for viewers (0, 16 or 18)"
												},
												"Guidance": {
													"type": "string",
													"description": "Channel 4-specific warning text about specific disturbing content, adult humour, nudity, etc., if applicable"
												},
												"Subtitles": {
													"type": "boolean",
													"description": "Boolean indicating if subtitles are available for this episode"
												},
												"AudioDescription": {
													"type": "boolean",
													"description": "Boolean indicating if an audio description is available for this episode"
												},
												"Duration": {
													"type": "string",
													"description": "Length in minutes and seconds - does not include ad breaks"
												}
											}
										},
										"dcterms:available": {
											"type": "string",
											"description": "Start date, end date and date/time format for the period of time when episode is available.  (This feed would not be available if the current date is outside the start and end dates.)"
										}
									}
								}
							}
						},
						"dcterms:available": {
							"type": "string",
							"description": "Start date, end date and date/time format for the period of time when episode is available.  (This feed would not be available if the current date is outside the start and end dates.)"
						},
						"media:thumbnail": {
							"type": "object",
							"description": "URL to medium sized image of this series",
							"properties": {
								"media:thumbnail": {
									"type": "string",
									"description": "URL to medium-sized image of this episode"
								}
							}
						},
						"summary": {
							"type": "string",
							"description": "Synopsis of episode"
						},
						"dc:date": {
							"type": "object",
							"properties": {
								"TXDate": {
									"type": "string",
									"format": "date-time",
									"description": "First TX date information for this episode"
								},
								"firstTXDate": {
									"type": "string",
									"format": "date-time",
									"description": "First TX date information for this episode"
								}
							}
						}
					}
				}
			]
		},
		"entryType": {
			"type": "object",
			"description": "The Atom entry construct is defined in section 4.1.2 of the format spec.",
			"additionalProperties": true,
			"x-anyOf": [
				{
					"$ref": "#/definitions/commonAttributes"
				},
				{
					"properties": {
						"author": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/personType"
							}
						},
						"category": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/categoryType"
							}
						},
						"content": {
							"$ref": "#/definitions/contentType"
						},
						"contributor": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/personType"
							}
						},
						"id": {
							"$ref": "#/definitions/idType"
						},
						"link": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/linkType"
							}
						},
						"published": {
							"$ref": "#/definitions/dateTimeType"
						},
						"rights": {
							"$ref": "#/definitions/textType"
						},
						"source": {
							"$ref": "#/definitions/textType"
						},
						"summary": {
							"$ref": "#/definitions/textType"
						},
						"title": {
							"$ref": "#/definitions/textType"
						},
						"updated": {
							"$ref": "#/definitions/dateTimeType"
						},
						"dc:relation": {
							"type": "object",
							"properties": {
								"BrandTitle": {
									"type": "string",
									"description": "Title of brand"
								},
								"SeriesNumber": {
									"type": "integer",
									"description": "The series to which this episode belongs."
								},
								"EpisodeNumber": {
									"type": "integer",
									"description": "The episode number within the series."
								},
								"AgeRating": {
									"type": "integer",
									"description": "Channel 4-specific recommended lower age-limit for viewers (0, 16 or 18)"
								},
								"Guidance": {
									"type": "string",
									"description": "Channel 4-specific warning text about specific disturbing content, adult humour, nudity, etc., if applicable"
								},
								"TXChannel": {
									"type": "string",
									"description": "If this programme is available on 4oD then this element indicates the broadcast channel that the episode selected for 4oD. If the programme is not on 4oD then this element is omitted."
								},
								"Subtitles": {
									"type": "boolean",
									"description": "Boolean indicating if subtitles are available for this episode"
								},
								"AudioDescription": {
									"type": "boolean",
									"description": "Boolean indicating if an audio description is available for this episode"
								},
								"Duration": {
									"type": "string",
									"description": "Length in minutes and seconds - does not include ad breaks"
								},
								"ProgrammeType": {
									"type": "string",
									"description": "Displays metadata code (as detailed in the following table) in a meaningful way on the application according to the specified programme type."
								},
								"BrandWebsafeTitle": {
									"type": "string",
									"description": "The associated brand web-safe title"
								},
								"programmeId": {
									"type": "string",
									"description": "The episode identifier."
								},
								"firstTXChannel": {
									"type": "string",
									"description": "First TX channel information for this episode"
								},
								"slotTXChannel": {
									"type": "string",
									"description": "Current TX channel information for this slot's episode"
								},
								"requestType": {
									"type": "string",
									"enum": [
										"ARCHIVE",
										"CATCHUP"
									],
									"description": "Indicates catchup or archive content"
								},
								"ExternalVideoId": {
									"type": "integer",
									"description": "This is the clip asset id (from column CLIP_ASSET.ASSET_ID. For the current implementation this is the Brightcove Id."
								},
								"RelatedEntryId": {
									"type": "string",
									"description": "The episode guide entry related to this episode"
								},
								"LoginRequired": {
									"type": "boolean",
									"description": "Boolean indicating if the requestType is ARCHIVE and the user needs to be logged in to watch."
								},
								"sortLetter": {
									"type": "string",
									"description": "Starting letter for this programme"
								},
								"Repeat": {
									"type": "boolean",
									"description": "Boolean indicating if the Slot includes an indicator marked as repeat."
								},
								"LastChannel": {
									"type": "string",
									"description": "The channel on which the previous TX from this brand(if applicable)"
								},
								"NextChannel": {
									"type": "string",
									"description": "The channel on which the next TX from this brand (if applicable)"
								},
								"TXStartTime": {
									"type": "string",
									"description": "Start date and time of the broadcast"
								},
								"BrandWebSafeTitle": {
									"type": "string",
									"description": "Programme's Brand name in Web safe format"
								},
								"CategoryType": {
									"type": "string",
									"description": "Type to which the category belongs (if applicable). (Valid values are 'Channel', 'Display' or 'None'.)"
								},
								"CategoryOrder": {
									"type": "integer",
									"description": "Enumerated order of category within its type (e.g., 'Channel' might have Food=1, More4=2, etc.) (Appears in feed only if CategoryType<>'None'.)"
								},
								"AllProgrammeCount": {
									"type": "integer",
									"description": "Number of available brands in this category (all programmes)"
								},
								"4oDProgrammeCount": {
									"type": "integer",
									"description": "The number of 4oD available programmes in the collection, including all Brand/Series/Episodes."
								},
								"platformClientVersion": {
									"type": "number",
									"description": "Identifies the version of the client application compatible with this feed."
								},
								"sortOrder": {
									"type": "integer",
									"description": "Starting letter for this programme"
								},
								"Synopsys": {
									"type": "string",
									"description": "The synopsis of this brand"
								},
								"resourceType": {
									"type": "string",
									"description": "The type of the entry"
								},
								"ParentCollectionId": {
									"type": "string",
									"description": "The ID of the Parent Collection where the resource is assigned to."
								},
								"WideScreen": {
									"type": "boolean",
									"description": "Boolean value is true if widescreen slot_indicator exists for this slot, otherwise false"
								},
								"Signing": {
									"type": "boolean",
									"description": "Boolean value is true if signing slot_indicator exists for this slot, otherwise false."
								},
								"SimulcastRights": {
									"type": "boolean",
									"description": "Boolean indicating if the episode has rights to be streamed on the live simulcast service."
								},
								"Platform": {
									"type": "string",
									"description": "The platform code that this episode is available on"
								},
								"Movie": {
									"type": "boolean",
									"description": "Boolean indicating if the SLOT is a Movie or not."
								},
								"comingSoonTo4oD": {
									"type": "string",
									"description": "If the brand is coming to be available on 4oD soon this empty element should be included."
								},
								"hd": {
									"type": "boolean",
									"description": "Boolean indicating if the SLOT is HD on linear"
								}
							}
						},
						"dcterms:available": {
							"type": "string",
							"description": "Start date, end date and date / time format for the period of time when episode is available on 4oD. This element is not returned if the programme is not currently available on 4oD."
						},
						"dc:date": {
							"type": "object",
							"properties": {
								"TXDate": {
									"type": "string",
									"format": "date-time",
									"description": "If this programme is available on 4oD then this element indicates the broadcast date/time of the episode selected for 4oD. If the programme is not on 4oD then this element is omitted.(Indicates whether pre- or post-watershed)"
								},
								"firstTXDate": {
									"type": "string",
									"format": "date-time",
									"description": "First TX date information for this episode"
								},
								"slotTXDate": {
									"type": "string",
									"format": "date-time",
									"description": "Current TX date information for this slot's episode"
								},
								"Last": {
									"type": "string",
									"format": "date-time",
									"description": "Timestamp of the previous TX from this brand (if applicable)"
								},
								"Next": {
									"type": "string",
									"format": "date-time",
									"description": "Timestamp of the next TX from this brand (if applicable)"
								}
							}
						},
						"media:group": {
							"type": "object",
							"properties": {
								"media:player": {
									"type": "string",
									"format": "uri",
									"description": "URL to 4oD media-player version of episode (if available)"
								},
								"media:thumbnail": {
									"type": "string",
									"description": "URL to 4oD medium-sized image of this episode (if available)"
								},
								"media:rating": {
									"type": "string",
									"description": "Flag to show whether the 4oD version of the episode is suitable for adults only (\"adult\") or for all viewers (\"nonadult\") (if available)"
								},
								"media:copyright": {
									"type": "string",
									"description": "Link to 4oD  copyright / T&C information (if available)"
								},
								"media:restriction": {
									"type": "string",
									"description": "Restriction flag (\"allow\") and list of country or state codes where 4oD episode is accessible to website users (if available)"
								},
								"media:rights": {
									"type": "string",
									"description": "Status of 4oD media rights under which Channel 4 provides episode content (if available)"
								},
								"media:content": {
									"type": "object",
									"properties": {
										"media:player": {
											"type": "string",
											"format": "uri",
											"description": "URL to media-player version of episode"
										},
										"media:thumbnail": {
											"type": "string",
											"description": "URL to medium-sized image of this episode"
										},
										"media:rating": {
											"type": "string",
											"description": "Flag to show whether episode is suitable for adults only (\"adult\") or for all viewers (\"nonadult\")"
										},
										"media:copyright": {
											"type": "string",
											"description": "Link to copyright / T&C information"
										},
										"media:restriction": {
											"type": "string",
											"description": "Restriction flag (\"allow\") and list of country or state codes where episode is accessible to website users"
										},
										"media:rights": {
											"type": "string",
											"description": "Status of media rights under which Channel 4 provides episode content"
										},
										"dc:relation": {
											"type": "object",
											"properties": {
												"requestType": {
													"type": "string",
													"enum": [
														"ARCHIVE",
														"CATCHUP"
													],
													"description": "Indicates catchup or archive content"
												},
												"deliveryType": {
													"type": "string",
													"enum": [
														"STREAM",
														"DOWNLOAD"
													],
													"description": "Indicates STREAMING or FOR DOWNLOAD content"
												},
												"AgeRating": {
													"type": "integer",
													"description": "Channel 4-specific recommended lower age-limit for viewers (0, 16 or 18)"
												},
												"Guidance": {
													"type": "string",
													"description": "Channel 4-specific warning text about specific disturbing content, adult humour, nudity, etc., if applicable"
												},
												"Subtitles": {
													"type": "boolean",
													"description": "Boolean indicating if subtitles are available for this episode"
												},
												"AudioDescription": {
													"type": "boolean",
													"description": "Boolean indicating if an audio description is available for this episode"
												},
												"Duration": {
													"type": "string",
													"description": "Length in minutes and seconds - does not include ad breaks"
												}
											}
										},
										"dcterms:available": {
											"type": "string",
											"description": "Start date, end date and date/time format for the period of time when episode is available.  (This feed would not be available if the current date is outside the start and end dates.)"
										}
									}
								},
								"media:category": {
									"type": "string",
									"description": "Defines the type of short-form item."
								}
							}
						},
						"dc:relataion": {
							"type": "object",
							"properties": {
								"BrandTitle": {
									"type": "string",
									"description": "Title for the brand that the clip is associated with (directly or indirectly)"
								},
								"BrandWebSafeTitle": {
									"type": "string",
									"description": "Web-safe title for the brand that the clip is associated with (directly or indirectly)"
								}
							}
						},
						"media:content": {
							"type": "object",
							"properties": {
								"media:thumbnail": {
									"type": "string",
									"description": "URL to medium-sized image of this brand"
								},
								"media:credit": {
									"type": "string",
									"description": "List of credits/cast for the episode"
								}
							}
						},
						"media:context": {
							"type": "object",
							"properties": {
								"media:thumbnail": {
									"type": "string",
									"description": "URL to medium-sized image of this brand"
								}
							}
						},
						"generator": {
							"type": "object",
							"description": "Identifies the agent used to generate the feed",
							"properties": {
								"version": {
									"type": "number",
									"description": "Identifies the version of the agent used to generate the feed"
								}
							}
						},
						"dc": {
							"type": "object",
							"properties": {
								"relation": {
									"type": "object",
									"properties": {
										"sortLetter": {
											"type": "integer",
											"description": "Starting letter for this programme"
										}
									}
								}
							}
						},
						"media:thumbnail": {
							"type": "string",
							"description": "URL to medium sized image of this series"
						},
						"subtitle": {
							"type": "string",
							"description": "The synopsis of the series."
						}
					}
				}
			]
		},
		"contentType": {
			"type": "object",
			"description": "The Atom content construct is defined in section 4.1.3 of the format spec.",
			"additionalProperties": true,
			"x-anyOf": [
				{
					"$ref": "#/definitions/commonAttributes"
				},
				{
					"properties": {
						"type": {
							"$ref": "#/definitions/ContentTypeType"
						},
						"src": {
							"type": "string",
							"format": "uri"
						}
					}
				}
			]
		},
		"categoryType": {
			"type": "object",
			"description": "The Atom category construct is defined in section 4.2.2 of the format spec.",
			"additionalProperties": false,
			"x-anyOf": [
				{
					"required": [
						"term"
					],
					"$ref": "#/definitions/commonAttributes"
				},
				{
					"properties": {
						"term": {
							"type": "string"
						},
						"scheme": {
							"type": "string",
							"format": "uri"
						},
						"label": {
							"type": "string"
						}
					}
				}
			]
		},
		"generatorType": {
			"type": "object",
			"description": "The Atom generator element is defined in section 4.2.4 of the format spec.",
			"additionalProperties": false,
			"x-anyOf": [
				{
					"$ref": "#/definitions/commonAttributes"
				},
				{
					"properties": {
						"uri": {
							"type": "string",
							"format": "uri"
						},
						"version": {
							"type": "string"
						},
						"#text": {
							"type": "string"
						}
					}
				}
			]
		},
		"iconType": {
			"type": "object",
			"description": "The Atom icon construct is defined in section 4.2.5 of the format spec.",
			"additionalProperties": false,
			"x-anyOf": [
				{
					"$ref": "#/definitions/commonAttributes"
				},
				{
					"properties": {
						"#text": {
							"type": "string",
							"format": "uri"
						}
					}
				}
			]
		},
		"idType": {
			"type": "object",
			"description": "The Atom id construct is defined in section 4.2.6 of the format spec.",
			"additionalProperties": false,
			"x-anyOf": [
				{
					"$ref": "#/definitions/commonAttributes"
				},
				{
					"properties": {
						"#text": {
							"type": "string",
							"format": "uri"
						}
					}
				}
			]
		},
		"linkType": {
			"type": "object",
			"description": "The Atom link construct is defined in section 3.4 of the format spec.",
			"additionalProperties": false,
			"x-anyOf": [
				{
					"required": [
						"href"
					],
					"$ref": "#/definitions/commonAttributes"
				},
				{
					"properties": {
						"href": {
							"type": "string",
							"format": "uri"
						},
						"rel": {
							"$ref": "#/definitions/RelCodeType"
						},
						"type": {
							"type": "string"
						},
						"hreflang": {
							"type": "string"
						},
						"title": {
							"type": "string"
						},
						"length": {
							"type": "integer",
							"minimum": 1
						}
					}
				}
			]
		},
		"logoType": {
			"type": "object",
			"description": "The Atom logo construct is defined in section 4.2.8 of the format spec.",
			"additionalProperties": false,
			"x-anyOf": [
				{
					"$ref": "#/definitions/commonAttributes"
				},
				{
					"properties": {
						"#text": {
							"type": "string",
							"format": "uri"
						}
					}
				}
			]
		},
		"sourceType": {
			"type": "object",
			"description": "The Atom source construct is defined in section 4.2.11 of the format spec.",
			"additionalProperties": true,
			"x-anyOf": [
				{
					"$ref": "#/definitions/commonAttributes"
				},
				{
					"properties": {
						"author": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/personType"
							}
						},
						"category": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/categoryType"
							}
						},
						"contributor": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/personType"
							}
						},
						"generator": {
							"$ref": "#/definitions/generatorType"
						},
						"icon": {
							"$ref": "#/definitions/iconType"
						},
						"id": {
							"$ref": "#/definitions/idType"
						},
						"link": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/linkType"
							}
						},
						"logo": {
							"$ref": "#/definitions/logoType"
						},
						"rights": {
							"$ref": "#/definitions/textType"
						},
						"subtitle": {
							"$ref": "#/definitions/textType"
						},
						"title": {
							"$ref": "#/definitions/textType"
						},
						"updated": {
							"$ref": "#/definitions/dateTimeType"
						}
					}
				}
			]
		},
		"uriType": {
			"type": "object",
			"additionalProperties": false,
			"x-anyOf": [
				{
					"$ref": "#/definitions/commonAttributes"
				},
				{
					"properties": {
						"#text": {
							"type": "string",
							"format": "uri"
						}
					}
				}
			]
		},
		"dateTimeType": {
			"type": "object",
			"additionalProperties": false,
			"x-anyOf": [
				{
					"$ref": "#/definitions/commonAttributes"
				},
				{
					"properties": {
						"#text": {
							"type": "string",
							"format": "date-time"
						}
					}
				}
			]
		},
		"commonAttributes": {
			"type": "object",
			"properties": {
				"xml:base": {
					"type": "string"
				},
				"xml:lang": {
					"type": "string"
				}
			},
			"additionalProperties": true
		}
	},
	"securityDefinitions": {
		"apikey": {
			"type": "apiKey",
			"name": "apikey",
			"in": "query"
		}
	},
	"security": [
		{
			"apikey": []
		}
	]
}